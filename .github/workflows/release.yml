name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build release on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            artifact_name: psf-guard
            asset_name: psf-guard-linux-x64
          - os: windows-latest
            artifact_name: psf-guard.exe
            asset_name: psf-guard-windows-x64.exe
          - os: macos-latest
            artifact_name: psf-guard
            asset_name: psf-guard-macos-x64
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install OpenCV dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libopencv-dev clang libclang-dev
    
    - name: Install OpenCV dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install opencv
        
        # Set up libclang path for macOS to avoid dyld errors
        # Try both XCode and Command Line Tools paths
        if [ -d "$(xcode-select --print-path)/Toolchains/XcodeDefault.xctoolchain/usr/lib/" ]; then
          echo "DYLD_FALLBACK_LIBRARY_PATH=$(xcode-select --print-path)/Toolchains/XcodeDefault.xctoolchain/usr/lib/" >> $GITHUB_ENV
        else
          echo "DYLD_FALLBACK_LIBRARY_PATH=$(xcode-select --print-path)/usr/lib/" >> $GITHUB_ENV
        fi
    
    - name: Cache vcpkg (Windows)
      if: matrix.os == 'windows-latest'
      id: vcpkg-cache
      uses: actions/cache@v4
      with:
        path: C:\vcpkg
        key: ${{ runner.os }}-vcpkg-opencv4-v2
    
    - name: Install OpenCV dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Install vcpkg if not cached
        if (!(Test-Path "C:\vcpkg")) {
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat
        }
        
        C:\vcpkg\vcpkg integrate install
        
        # Install OpenCV if not already installed
        if (!(Test-Path "C:\vcpkg\installed\x64-windows\include\opencv2")) {
          C:\vcpkg\vcpkg install opencv4[contrib,nonfree]:x64-windows opencv4[contrib,nonfree]:x64-windows-static-md
        }
        
        # Set environment variables
        echo "VCPKG_ROOT=C:\vcpkg" >> $env:GITHUB_ENV
        echo "OpenCV_DIR=C:\vcpkg\installed\x64-windows" >> $env:GITHUB_ENV
        echo "OPENCV_DISABLE_PROBES=pkg_config,cmake,vcpkg_cmake" >> $env:GITHUB_ENV
        echo "OPENCV_LINK_DIRS=C:\vcpkg\installed\x64-windows\lib" >> $env:GITHUB_ENV
      shell: pwsh
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: 1.89.0
    
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: static/package-lock.json
    
    - name: Install npm dependencies
      run: |
        cd static
        npm ci
    
    - name: Build
      run: cargo build --release --locked
    
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}
        overwrite: true
